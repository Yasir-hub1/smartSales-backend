# Generated by Django 5.2.7 on 2025-10-18 16:49

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('model_type', models.CharField(choices=[('sales_forecast', 'Pronóstico de Ventas'), ('customer_segmentation', 'Segmentación de Clientes'), ('recommendation', 'Sistema de Recomendaciones'), ('churn_prediction', 'Predicción de Abandono'), ('demand_forecast', 'Pronóstico de Demanda'), ('price_optimization', 'Optimización de Precios')], max_length=50, verbose_name='Tipo de Modelo')),
                ('model_file', models.CharField(max_length=500, verbose_name='Archivo del Modelo')),
                ('accuracy', models.FloatField(blank=True, null=True, verbose_name='Precisión')),
                ('r2_score', models.FloatField(blank=True, null=True, verbose_name='R² Score')),
                ('mae', models.FloatField(blank=True, null=True, verbose_name='MAE')),
                ('rmse', models.FloatField(blank=True, null=True, verbose_name='RMSE')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('version', models.CharField(default='1.0', max_length=20, verbose_name='Versión')),
                ('training_data_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tamaño de Datos de Entrenamiento')),
                ('features_used', models.JSONField(default=list, verbose_name='Features Utilizadas')),
                ('hyperparameters', models.JSONField(default=dict, verbose_name='Hiperparámetros')),
                ('training_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Entrenamiento')),
                ('last_retrain', models.DateTimeField(blank=True, null=True, verbose_name='Último Reentrenamiento')),
            ],
            options={
                'verbose_name': 'Modelo ML',
                'verbose_name_plural': 'Modelos ML',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeatureImportance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('feature_name', models.CharField(max_length=100, verbose_name='Nombre del Feature')),
                ('importance_score', models.FloatField(verbose_name='Score de Importancia')),
                ('rank', models.PositiveIntegerField(verbose_name='Ranking')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_predictions.mlmodel', verbose_name='Modelo')),
            ],
            options={
                'verbose_name': 'Importancia de Feature',
                'verbose_name_plural': 'Importancia de Features',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='ModelTrainingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('training_type', models.CharField(choices=[('initial', 'Inicial'), ('retrain', 'Reentrenamiento'), ('update', 'Actualización')], max_length=20, verbose_name='Tipo de Entrenamiento')),
                ('status', models.CharField(choices=[('started', 'Iniciado'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido')], max_length=20, verbose_name='Estado')),
                ('training_data_size', models.PositiveIntegerField(verbose_name='Tamaño de Datos')),
                ('accuracy_before', models.FloatField(blank=True, null=True, verbose_name='Precisión Antes')),
                ('accuracy_after', models.FloatField(blank=True, null=True, verbose_name='Precisión Después')),
                ('training_duration', models.DurationField(blank=True, null=True, verbose_name='Duración del Entrenamiento')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de Error')),
                ('parameters_used', models.JSONField(default=dict, verbose_name='Parámetros Utilizados')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_predictions.mlmodel', verbose_name='Modelo')),
            ],
            options={
                'verbose_name': 'Log de Entrenamiento',
                'verbose_name_plural': 'Logs de Entrenamiento',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_data', models.JSONField(verbose_name='Datos de Entrada')),
                ('prediction_result', models.JSONField(verbose_name='Resultado de Predicción')),
                ('confidence', models.FloatField(blank=True, null=True, verbose_name='Confianza')),
                ('prediction_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Predicción')),
                ('target_date', models.DateField(blank=True, null=True, verbose_name='Fecha Objetivo')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='Categoría')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_predictions.mlmodel', verbose_name='Modelo')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Predicción',
                'verbose_name_plural': 'Predicciones',
                'ordering': ['-created_at'],
            },
        ),
    ]
